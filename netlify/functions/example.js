import*as nodemailer from"nodemailer";const env=process.env;const emailConfig={service:"gmail",auth:{user:env.EMAIL,pass:env.PASS}};const allowedOrigins=env.ALLOWED_ORIGINS.split(",");const handler=async event=>{const origin=event.headers.origin||"";let headers={"Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Origin":allowedOrigins.includes(origin)?origin:false};if(event.httpMethod==="OPTIONS"){return{statusCode:204,headers:headers,body:""}}if(!allowedOrigins.includes(origin)){return{statusCode:403,headers:headers,body:"Access denied. Origin not allowed."}}if(event.httpMethod!=="POST"){return{statusCode:405,headers:headers,body:"Method Not Allowed"}}let email=null,subject=null,message=null;let isJson=false;if(event.body){try{const parsedBody=JSON.parse(event.body);email=parsedBody.email;subject=parsedBody.subject;message=parsedBody.message;isJson=true}catch(error){const params=new URLSearchParams(event.body);email=params.get("email");subject=params.get("subject");message=params.get("message")}}else{return{statusCode:400,headers:headers,body:JSON.stringify({error:"Request body is empty"})}}if(email===null||subject===null||message===null){if(isJson){return{statusCode:400,headers:headers,body:JSON.stringify({error:"Missing email, subject, or message"})}}else{return{statusCode:303,headers:{...headers,Location:`${origin}/#error`},body:""}}}const transporter=nodemailer.createTransport(emailConfig);const mailOptions={from:env.EMAIL,to:email,subject:subject,html:`<p>${message}</p>`};try{await transporter.sendMail(mailOptions);if(isJson){return{statusCode:200,headers:headers,body:JSON.stringify({message:"Email sent successfully"})}}else{return{statusCode:303,headers:{...headers,Location:`${origin}/#success`},body:""}}}catch(error){console.error("Error sending email: ",error);if(isJson){return{statusCode:500,headers:headers,body:JSON.stringify({error:"Failed to send email"})}}else{return{statusCode:303,headers:{...headers,Location:`${origin}/#error`},body:""}}}};export{handler};